trigger:
- master
- devel

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    sudo apt-get -y install gromacs
    conda create -y -q -n testenv python=$(python.version)
  displayName: "Create Conda environment"

- script: |
    source /usr/share/miniconda/bin/activate testenv
    cd $(Build.SourcesDirectory)
    conda install -y conda-build anaconda-client

    if [ $(Build.SourceBranchName) -eq "master" ]
    then
      conda build conda-recipe/meta.yaml -c michellab -c rdkit -c conda-forge -c omnia -c bioconda --token $(anacondaToken) --user essexlab
    elif [ $(Build.SourceBranchName) -eq "devel" ]
    then
      conda build conda-recipe/meta.yaml -c michellab -c rdkit -c conda-forge -c omnia -c bioconda --token $(anacondaToken) --user essexlab --label dev
    fi

    if [ $(Build.SourceBranchName) -eq "master" ]
    then
      conda install -y -c michellab -c rdkit -c conda-forge -c omnia -c bioconda -c essexlab protocaller
    elif [ $(Build.SourceBranchName) -eq "devel" ]
    then
      conda install -y -c michellab -c rdkit -c conda-forge -c omnia -c bioconda -c essexlab/label/dev protocaller
    fi

    python -m pip install --upgrade pip
    pip install pytest pytest-azurepipelines
  displayName: 'Install ProtoCaller'

- script: |
    source /usr/share/miniconda/bin/activate testenv
    python -m pytest test/
  displayName: 'Test ProtoCaller'